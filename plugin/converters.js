const config = require('../config');
const { cmd } = require('../command');
const { getRandom } = require('../lib/functions');

var voicemsg = '';
if (config.LANG === 'SI') voicemsg = '‡∑Å‡∑ä‡∂ª‡∑Ä‡∑ä‚Äç‡∂∫ ‡∂ë‡∂ö‡∂ö‡∂ß mention ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±!';
else voicemsg = ' Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä…¥ ·¥Ä·¥ú·¥Ö…™·¥è “ì·¥è Ä ·¥†·¥è…™·¥Ñ·¥á …¥·¥è·¥õ·¥á!';
var descgvoice = '';
if (config.LANG === 'SI') descgvoice = '‡∂ë‡∂∫ ‡∂î‡∂∂‡∂ú‡∑ö mention ‡∂Ø‡∑î‡∂±‡∑ä ‡∑Å‡∑ä‡∂ª‡∑Ä‡∑ä‚Äç‡∂∫ ‡∂ë‡∂ö ‡∑Ä‡∑ú‡∂∫‡∑í‡∑É‡∑ä ‡∂±‡∑ù‡∂ß‡∑ä ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂∂‡∑Ä‡∂ß ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∂ª‡∂∫‡∑í.';
else descgvoice = '…™·¥õ ·¥Ñ·¥è…¥·¥†·¥á Ä·¥õs  è·¥è·¥ú Ä  Ä·¥á·¥ò ü…™·¥á·¥Ö ·¥Ä·¥ú·¥Ö…™·¥è ·¥õ·¥è ·¥†·¥è…™·¥Ñ·¥á …¥·¥è·¥õ·¥á.';

cmd({
  pattern: 'tovoice',
  react: 'üé§',
  alias: ['voice'],
  desc: descgvoice,
  category: 'convert',
  use: '.tovoice <Reply to audio>',
  filename: __filename
}, async (conn, mek, m, { from, reply, isCmd, command, args, q, isGroup, pushname }) => {
  try {
    const isQuotedAudio = m.quoted && m.quoted.type === 'audioMessage';
    if (isQuotedAudio) {
      const audioBuffer = await m.quoted.download();
      await conn.sendMessage(from, { audio: audioBuffer, mimetype: 'audio/ogg; codecs=opus', ptt: true }, { quoted: mek });
    } else {
      return await reply(voicemsg);
    }
  } catch (e) {
    reply('Error !!');
    console.error(e);
  }
});
